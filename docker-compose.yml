version: "3"
# services sao os containers que vamos utilizar 
services:
  mongo: # container
    container_name: mongo-container
    image: mongo:7 # imagem que irá ser contida pelo container (nesse caso está baixando uma imagem da internet)
    restart: always
    # volumes serve para nao perdermos dados quando container for desligado
    # entao ele irá basicamente mapear as coisas numa pasta local /data, e depois 
    # mapear esta com a pasta remota do docker /data/db
    # isso basicamente entao significa, quando rodar o container, ele irá criar a pasta 
    # local e persistir os dados dentro da pasta local. Entao nao perderá os dados que vao ficar guardados nesse container
    volumes:
      - ./data:/data/db
    # porta do mongo para porta do mongo no docker (liberando elas tanto localmente como no docker e fazendo o mapeamento delas)
    ports:
      - "27017:27017"
  api:
    container_name: api_container
    image: node:22 # nesse caso o image nao vai servir para baixar nada da internet, mas sim para dar um nome para a imagem do projeto
    working_dir: /usr/src/clean-node-api
    command: bash -c "npm install --only=prod && npm run start" # junta script antigo do DockerFile com o start do projeto
    restart: always
    environment:
      MONGO_URL: mongodb://mongo:27017/clean-node-api
    volumes: # esses volumes são super importantes para termos de cache
      - ./dist/:/usr/src/clean-node-api/dist/ # manda diretório dist local para diretório do container
      - ./package.json:/usr/src/clean-node-api/package.json
    ports:
      - "5050:5050" # definindo a porta aqui podemos retirar a linha EXPOSE PORT do arquivo Dockerfile
    links:
      - mongo